@import "../../variables/color";
@import "../../variables/font";
@import "../../mixins/spacing";
@import "../../mixins/typography";

$_info-bar-gutter: 8px;
$_info-bar-inline-offset-with-image: 28px;
$_info-bars: (
  (type: attention, background-color: $color-attention, image: (file:"attention.svg", inline-size: 22px)),
  (type: correction, background-color: $color-attention, image: (file:"corrected-article.svg", inline-size: 18px)),
  (type: info, background-color: $color-information, image: (file: "info.svg", inline-size: 20px)),
  (type: success, background-color: $color-success, image: (file: "success.svg", inline-size: 20px)),
  (type: warning, background-color: $color-warning, image: null)
);

@function _get-info-bar-background-color($map) {
  $default: $color-attention;
  $supplied: map_get($map, background-color);
  @if $supplied {
    @return $supplied;
  }
  @return $default;
}

.info-bar {
  color: $color-text-reverse;
  font-family: $font-secondary;
  font-weight: 600;
  text-align: center;
  @include set-font-size-and-line-height(scale(-1));
  @include padding($baselinegrid-space-extra_small $_info-bar-gutter);

  a {
    color: inherit;
    text-decoration: underline;
  }
}

@each $info-bar in $_info-bars {

  .info-bar--#{map-get($info-bar, type)} {

    background-color: _get-info-bar-background-color($info-bar);

    $image: map-get($info-bar, image);
    @if $image {
      & .info-bar__text {
        // Comes into play when the image is taller than the text
        display: inline-block;
        background: url("../images/#{map_get($image, file)}") 0/#{map_get($image, inline-size)} no-repeat;
        @include padding($_info-bar-inline-offset-with-image, inline-start);
      }
    } @else {
      & .info-bar__text {
        @include padding(0, inline-start);
      }
    }

  }

}
