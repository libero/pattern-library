@import "variables/color";
@import "mixins/grid";
@import "mixins/spacing";

.grid {
  @include grid-setup(map_get($grid, column-count), map_get($grid, column-gap), map_get($grid, max-width));

  & > * {
    @include grid-span-all-but-edges();
  }

  & > .grid-item-span-all {
    @include grid-span-all();
  }

  & > .grid-item-span-all-but-edges {
    @include grid-span-all-but-edges();
  }

}

// Although the column count for the grid is set by including `grid-setup()` these grids as defined are based
// on 12 usable columns in the center, surrounded by one column on each inline edge in order to provide a
// margin on either side.

.grid--article {

  .grid {

    .grid-tertiary-column {

      @include mq($from: x-wide) {
        display: block;
        grid-column: 2 / 4;
      }

    }

    & > .grid-main-column {

      @include mq($from: wide) {
        grid-column: 2 / 10;
      }

      @include mq($from: x-wide) {
        grid-column: 4 / 11;
      }

    }

    & > .grid-secondary-column {

      @include mq($from: wide) {
        grid-column: 10 / 14;
      }

      @include mq($from: x-wide) {
        grid-column: 11 / 14;
      }

    }

  }

}

.grid--inside-elife {

  & > * {

    @include mq($from: wide) {
      grid-column: 3 / -3;
    }

  }

  & > * {

    @include mq($from: x-wide) {
      grid-column: 4 / -4;
    }

  }

}
