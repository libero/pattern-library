// TODO: Move to configuration once using refactor arriving via npm module
$grid: (
  main-column-count: 12,
  edge-colum-count:1,
  edge-space-medium: 7vw,
  edge-space-large: 14vw,
  column-gap: 1.6%,
  max-width: 1114px
);

// Nullify the effect of the first and last gutters by reducing both the first and last column tracks by the width of the grid gap.
@function grid-edge-space($size, $grid-gap, $edge-column-count) {
  // To calculate the width of each edge column, take the total size of the edge, subtract the width of all that edge's
  // column gutters, and divide the result by the number of edge columns required
  @return repeat($edge-column-count, calc((#{map_get($grid, edge-space-#{$size})} - (#{$grid-gap} * #{$edge-column-count})) / #{$edge-column-count}));
}

// return the column gap even if specified as a percentage
@function calc-fixed-col-gap($specified-col-gap, $max-width: null) {
  @if unit($specified-col-gap) != "%" {
    @return $specified-col-gap;
  }
  @if not $max-width {
    @return "max-width is required when column gap is specified as a percentage";
  }
  // "$specified-col-gap / 100%" divides $specified-col-gap by 100 and cancels out the % sign making the expression unitless.
  @return $max-width * ($specified-col-gap / 100%);
}

@function grid-start($edge-column-count, $edge-space: null, $column-gap: null) {
  @if $edge-space and not $column-gap {
    @return "Expected both edge space and column gap, but only edge-space supplied";
  }
  @if $edge-space and $column-gap {
    @return [full-start] grid-edge-space($edge-space, $column-gap, $edge-column-count);
  }
  @return [full-start] repeat($edge-column-count, #{1 / $edge-column-count}fr);
}

@function grid-end($edge-column-count, $edge-space: null, $column-gap: null) {
  @if $edge-space and not $column-gap {
    @return "Expected both edge space and column gap, but only edge-space supplied";
  }
  @if $edge-space and $column-gap {
    @return grid-edge-space($edge-space, $column-gap, $edge-column-count) [full-end];
  }
  @return repeat($edge-column-count, #{1 / $edge-column-count}fr) [full-end];
}

@function grid-main-content($hasSecondaryContent, $breakpoint, $column-track-fixed-width: null) {
  @if $breakpoint == x-wide and not $column-track-fixed-width {
    @return "A column track fixed width must be provided for the x-wide breakpoint";
  }

  $mainColumnsByBreakPoint: (
    default: (
      withSecondary: [main-start primary-start secondary-start tertiary-start] repeat(12, 1fr) [tertiary-end secondary-end primary-end main-end],
      noSecondary: [main-start primary-start tertiary-start] repeat(12, 1fr) [tertiary-end primary-end main-end],
    ),
    medium: (
      withSecondary: [main-start primary-start tertiary-start] repeat(8, 1fr) [primary-end secondary-start] repeat(4, 1fr) [secondary-end tertiary-end main-end],
      noSecondary: [main-start] 1fr [primary-start tertiary-start] repeat(10, 1fr) [primary-end tertiary-end] 1fr [main-end],
    ),
    wide: (
      withSecondary: [main-start primary-start tertiary-start] repeat(8, 1fr) [primary-end secondary-start] repeat(4, 1fr) [secondary-end tertiary-end main-end],
      noSecondary: [main-start] 1fr [primary-start tertiary-start] repeat(10, 1fr) [primary-end tertiary-end] 1fr [main-end],
    ),
    x-wide: (
      withSecondary: [main-start tertiary-start] repeat(2, $column-track-fixed-width) [tertiary-end primary-start] repeat(7, $column-track-fixed-width) [primary-end secondary-start] repeat(3, $column-track-fixed-width) [secondary-end main-end],
      noSecondary: [main-start tertiary-start] repeat(2, $column-track-fixed-width) [tertiary-end primary-start] repeat(8, $column-track-fixed-width) [primary-end] repeat(2, $column-track-fixed-width) [main-end]
    ),
  );

  $columnsForBreakpoint: map_get($mainColumnsByBreakPoint, $breakpoint);

  @if $hasSecondaryContent {
    @return map_get($columnsForBreakpoint, withSecondary);
  } @else {
    @return map_get($columnsForBreakpoint, noSecondary);
  }
}

@function grid-main-basic($column-track-fixed-width: null) {
  @if $column-track-fixed-width {
    @return [main-start] repeat(12, $column-track-fixed-width) [main-end];
  }
  @return [main-start] repeat(12, 1fr) [main-end];
}
