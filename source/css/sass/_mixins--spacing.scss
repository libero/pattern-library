@import "utility-functions";
@import "variables--baseline-grid";
@import "variables--breakpoints";

@mixin padding($size_in_px, $dimension: "") {
  @if $dimension == top or $dimension == right or $dimension == bottom or $dimension == left {
    @if $size_in_px == 0 {
      padding-#{$dimension}: 0;
    } @else {
      padding-#{$dimension}: #{$size_in_px}px;
      padding-#{$dimension}: #{get-rem-from-px($size_in_px)}rem;
    }
  }
  @else if $dimension == "" and type_of($size_in_px) == list {
    $parts-px: ();
    $parts-rem: ();
    @each $size in $size_in_px {
      @if $size == 0 {
        $parts-px: append($parts-px, 0, "space");
      } @else {
        $parts-px: append($parts-px, #{$size}px, "space");
      }
    }
    @each $size in $size_in_px {
      @if $size == 0 {
        $parts-rem: append($parts-rem, 0, "space");
      } @else {
        $parts-rem: append($parts-rem, #{get-rem-from-px($size)}rem, "space");
      }
    }
    padding: $parts-px;
    padding: $parts-rem;
  }
  @else {
    @if $size_in_px == 0 {
      padding: 0;
    } @else {
      padding: #{$size_in_px}px;
      padding: #{get-rem-from-px($size_in_px)}rem;
    }
  }
}

@mixin margin($size_in_px, $dimension: "") {
  @if $dimension == top or $dimension == right or $dimension == bottom or $dimension == left {
    @if $size_in_px == 0 {
      margin-#{$dimension}: 0;
    } @else {
      margin-#{$dimension}: #{$size_in_px}px;
      margin-#{$dimension}: #{get-rem-from-px($size_in_px)}rem;
    }
  }
  @else if $dimension == "" and type_of($size_in_px) == list {
    $parts-px: ();
    $parts-rem: ();
    @each $size in $size_in_px {
      @if $size == 0 {
        $parts-px: append($parts-px, 0, "space");
      } @else {
        $parts-px: append($parts-px, #{$size}px, "space");
      }
    }
    @each $size in $size_in_px {
      @if $size == 0 {
        $parts-rem: append($parts-rem, 0, "space");
      } @else {
        $parts-rem: append($parts-rem, #{get-rem-from-px($size)}rem, "space");
      }
    }
    margin: $parts-px;
    margin: $parts-rem;
  }
  @else {
    @if $size_in_px == 0 {
      margin: 0;
    } @else {
      margin: #{$size_in_px}px;
      margin: #{get-rem-from-px($size_in_px)}rem;
    }
  }
}

@mixin nospace($dimension: "all") {
  @if $dimension == "all" {
    margin: 0;
    padding: 0;
  } @else if $dimension == "top" {
    margin-top: 0;
    padding-top: 0;
  } @else if $dimension == "right" {
    margin-right: 0;
    padding-right: 0;
  } @else if $dimension == "bottom" {
    margin-bottom: 0;
    padding-bottom: 0;
  } @else if $dimension == "left" {
    margin-left: 0;
    padding-left: 0;
  }
}

// blg stands for "baseline grid"

@mixin blg-spacing($dimension, $level, $type: "padding") {
  @if $type == "padding" {
    @if $level == "extra-small" {
      @include padding($libero-blg-space-extra-small-in-px, $dimension);
    } @else if $level == "small" {
      @include padding($libero-blg-space-small-in-px, $dimension);
    } @else if $level == "smallish" {
      @include padding($libero-blg-space-smallish-in-px, $dimension);
    } @else if $level == "medium" {
      @include padding($libero-blg-space-medium-in-px, $dimension);
    } @else if $level == "large" {
      @include padding($libero-blg-space-large-in-px, $dimension);
    }
  } @else if $type == "margin" {
    @if $level == "extra-small" {
      @include margin($libero-blg-space-extra-small-in-px, $dimension);
    } @else if $level == "small" {
      @include margin($libero-blg-space-small-in-px, $dimension);
    } @else if $level == "smallish" {
      @include margin($libero-blg-space-smallish-in-px, $dimension);
    } @else if $level == "medium" {
      @include margin($libero-blg-space-medium-in-px, $dimension);
    } @else if $level == "large" {
      @include margin($libero-blg-space-large-in-px, $dimension);
    }
  }
}

@mixin blg-pad-top--small-to-medium {

  @include blg-spacing("top", "small");

  @media only all and (min-width: #{get-rem-from-px($bkpt-site--medium)}em) {
    @include blg-spacing("top", "medium");
  }

}

@mixin blg-pad-bottom--small-to-medium {

  @include blg-spacing("bottom", "small");

  @media only all and (min-width: #{get-rem-from-px($bkpt-site--medium)}em) {
    @include blg-spacing("bottom", "medium");
  }

}

@mixin blg-pad-top--large-to-extra-large {

  @include blg-spacing("top", "large");

  @media only all and (min-width: #{get-rem-from-px($bkpt-site--medium)}em) {
    @include blg-spacing("top", "extra-large");
  }

}

@mixin blg-pad-bottom--large-to-extra-large {

  @include blg-spacing("bottom", "large");

  @media only all and (min-width: #{get-rem-from-px($bkpt-site--medium)}em) {
    @include blg-spacing("bottom", "extra-large");
  }

}

@mixin blg-pad-vertical-small-to-medium {
  @include blg-pad-top--small-to-medium();
  @include blg-pad-bottom--small-to-medium();
}

@mixin blg-pad-vertical-large-to-extra-large {
  @include blg-pad-top--large-to-extra-large();
  @include blg-pad-bottom--large-to-extra-large();
}

@mixin blg-margin-bottom--medium-to-large {

  @include blg-spacing("bottom", "medium", "margin");

  @media only all and (min-width: #{get-rem-from-px($bkpt-site--medium)}em) {
    @include blg-spacing("bottom", "large", "margin");
  }

}

@mixin blg-margin-bottom--small-to-medium {

  @include blg-spacing("bottom", "small", "margin");

  @media only all and (min-width: #{get-rem-from-px($bkpt-site--medium)}em) {
    @include blg-spacing("bottom", "medium", "margin");
  }

}

@mixin blg-column-container() {
  @include blg-margin-bottom--medium-to-large();
}

@mixin h1-spacing() {
  margin: 0;
}

@mixin h2-spacing() {
  margin: 0;
  @include padding(21, "bottom");
  @include padding(21, "top");
}

@mixin h3-spacing() {
  margin: 0;
  @include blg-spacing("top", "extra-small");
  @include blg-spacing("bottom", "extra-small");
}

@mixin h4-spacing() {
  margin: 0;
  @include blg-spacing("top", "extra-small");
  @include blg-spacing("bottom", "extra-small");
}

@mixin h5-spacing() {
  margin: 0;
  @include blg-spacing("top", "extra-small");
  @include blg-spacing("bottom", "extra-small");
}

@mixin h6-spacing() {
  margin: 0;
  @include padding(10, "top");
  @include padding(14, "bottom");
}

@mixin body-spacing() {
  margin: 0;
  @include blg-spacing("bottom", "small", "margin");
}

@mixin small-spacing() {
  @include blg-spacing("bottom", "small");
}
