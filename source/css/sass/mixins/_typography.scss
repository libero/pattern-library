@import "../mixins/types";
@import "../variables/baselinegrid";
@import "../variables/color";
@import "../variables/font";
@import "spacing";
@import "utilities";
@import "scale";

@mixin set-font-size-and-line-height($font-size, $block-size: $baselinegrid-space-small) {
  @include rem((
    font-size: $font-size,
    line-height: $block-size,
  ));
}

@mixin _heading-base-typography() {
  font-family: $font-secondary;
  font-weight: 600;
}

@mixin h1-typography() {
  @include _heading-base-typography();
  @include set-font-size-and-line-height(scale(7), $baselinegrid-space-medium);
}

@mixin h2-typography() {
  @include _heading-base-typography();
  @include set-font-size-and-line-height(scale(4), ($baselinegrid-space-small + $baselinegrid-space-smallish) / 2);
}

@mixin h3-typography() {
  @include _heading-base-typography();
  @include set-font-size-and-line-height(scale(3));
}

@mixin h4-typography() {
  @include _heading-base-typography();
  @include set-font-size-and-line-height(scale(2));
}

@mixin h5-typography() {
  @include _heading-base-typography();
  @include set-font-size-and-line-height(scale(1));
}

@mixin h6-typography() {
  @include _heading-base-typography();
  @include set-font-size-and-line-height(scale(0));
}

@mixin body-typography() {
  font-family: $font-primary;
  @include set-font-size-and-line-height(scale(0));
  font-weight: normal;
}

@mixin inline-image {
  @include margin(0.1em, block-end);
  @include max-block-size(1em);
  vertical-align: middle;
}

@mixin _base-font-variant-position($position) {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
  @supports (font-variant-position: #{$position}) {
    font-size: inherit;
    font-variant-position: $position;
    position: static;
  }
}

@mixin font-variant-position($position) {
  @if $position == sub {
    @include _base_font-variant-position($position);
    bottom: -0.25em; // stylelint-disable-line csstools/use-logical
  } @else if $position == super {
    @include _base_font-variant-position($position);
    top: -0.5em; // stylelint-disable-line csstools/use-logical
  } @else {
    @include _error("Unknown position '#{$position}'");
  }
}

@mixin _label-typography($color, $uppercase: true) {
  color: $color;
  font-family: $font-secondary;
  font-weight: normal;
  @include set-font-size-and-line-height(scale(-3));
  letter-spacing: $font-letterspacing-label;
  @if $uppercase {
    text-transform: uppercase;
  }
}

@mixin label-content-typography($color: $color-text-secondary, $uppercase: true) {
  @include _label-typography($color, $uppercase);
}

@mixin label-tag-typography() {
  @include _label-typography($color-primary-normal);
}

@mixin covert-link($hover-color: $color-primary-dark) {
  @include inherit-all($ensure: color text-decoration);
  cursor: pointer;

  &:hover {
    color: $hover-color;
  }
}
