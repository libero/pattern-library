@import "../variables/grid";
@import "../variables/font";
@import "../vendor/sass-rem/rem";
@import "../functions/grid";
@import "media-query";
@import "spacing";

// Place items in the grid by name into "primary", "secondary" or "tertiary" areas
// It's possible to 'break out' of these areas by using the class 'grid-item-span-full'. Not yet possible to break out across a subset of the edge columns.
// The grid comprises 12 columns to contain the content plus $edge-column-count columns on either side of
// the $main-column-count columns in order to provide centring while retaining the ability to appear to break out of the grid into the this left / right space normally used for centring.

// $edge-column-count is the number of columns per inline edge that is created to allow 'breakout' into, and to provide centering
// $column-gap can be set in any css length unit
// $max-width: the maximum width for the main area (assumption: this will kick in at the x-wide breakpoint)

@mixin grid-span-full() {
  grid-column: full;
}

@mixin grid-span-main() {
  grid-column: main;
}

@mixin grid-setup-base($column-gap, $max-width) {

  max-width: $max-width;

  @include margin(auto, inline);

  @supports (display: grid) {
    display: grid;
    max-width: unset;
    @include margin(unset, inline);
  }
  grid-column-gap: $column-gap;
  grid-template-rows: [site-header] auto [main] 1fr;

  @include grid-span-full();
}

// Set up full / main column ranges
@mixin grid-setup-basic-columns($edge-column-count, $column-gap, $max-width) {

  grid-template-columns:
    grid-start($edge-column-count, medium, $column-gap)
    grid-main-basic()
    grid-end($edge-column-count, medium, $column-gap);

  @include mq($from: medium) {
    grid-template-columns:
      grid-start($edge-column-count, large, $column-gap)
      grid-main-basic()
      grid-end($edge-column-count, large, $column-gap);
  }

  @include mq($from: x-wide) {
    $column-gap-fixed-width: calc-fixed-col-gap($column-gap, $max-width);
    grid-column-gap: $column-gap-fixed-width;

    // There are main-columns - 1 gutters to account for within the central $main-column-count number of columns:
    $column-track-fixed-width: ($max-width - ($column-gap-fixed-width * (12 - 1))) / 12;
    grid-template-columns:
      grid-start($edge-column-count)
      grid-main-basic($column-track-fixed-width)
      grid-end($edge-column-count);
  }

}

@mixin _grid-setup-content($edge-column-count, $column-gap, $max-width, $hasSecondary) {

  @include grid-setup-base($column-gap, map_get($grid, max-width));

  // Fixed to 12 grid columns in the main area, with a variable number of edge columns
  grid-template-columns:
    grid-start($edge-column-count, medium, $column-gap)
    grid-main-content($hasSecondary, default)
    grid-end($edge-column-count, medium, $column-gap);

  @include mq($from: medium) {
    grid-template-columns:
      grid-start($edge-column-count, large, $column-gap)
      grid-main-content($hasSecondary, medium)
      grid-end($edge-column-count, large, $column-gap);
  }

  @include mq($from: wide) {
    grid-template-columns:
      grid-start($edge-column-count, large, $column-gap)
      grid-main-content($hasSecondary, wide)
      grid-end($edge-column-count, large, $column-gap);
  }

  // Assume x-wide breakpoint controls layout at $max-width
  @include mq($from: x-wide) {
    $column-gap-fixed-width: calc-fixed-col-gap($column-gap, $max-width);
    grid-column-gap: $column-gap-fixed-width;

    // There are main-columns - 1 gutters to account for within the central $main-column-count number of columns:
    $column-track-fixed-width: ($max-width - ($column-gap-fixed-width * (12 - 1))) / 12;

    grid-template-columns:
      grid-start($edge-column-count)
      grid-main-content($hasSecondary, x-wide, $column-track-fixed-width)
      grid-end($edge-column-count);
  }

}

@mixin grid-setup-content-with-secondary-content($edge-column-count, $column-gap, $max-width) {
  @include _grid-setup-content(
    map_get($grid, edge-colum-count),
    map_get($grid, column-gap),
    map_get($grid, max-width),
    true
  );
}

@mixin grid-setup-content-no-secondary-content($edge-column-count, $column-gap, $max-width) {
  @include _grid-setup-content(
    map_get($grid, edge-colum-count),
    map_get($grid, column-gap),
    map_get($grid, max-width),
    false
  );
}
