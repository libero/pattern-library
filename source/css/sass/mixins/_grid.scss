@import "../variables/grid";
@import "../variables/font";
@import "../vendor/sass-rem/rem";
@import "../vendor/sass-mq/mq";
@import "../functions/grid";

//Properties applying across all grids
@mixin _grid-setup-base ($column-gap) {
  display: grid;
  grid-column-gap: $column-gap;
  grid-template-rows: [site-header] auto [main] 1fr;

  & > * {
    grid-column: main;
  }

  & > .grid-item-span-main {
    grid-column: main;
  }

  & .main {
    grid-column: full;
  }

  & > .site-header-wrapper {
    grid-column: full;
    grid-row: site-header;
  }

  .grid-item-span-full {
    grid-column: full;
  }

}

// Used for research article
// Place items in the grid by name into "primary", "secondary" or "tertiary" areas
// It's possible to 'break out' of these areas by using the class 'grid-item-span-full'. Not yet possible to break out across a subset of the edge columns.
// The grid comprises 12 columns to contain the content plus $edge-column-count columns on either side of
// the $main-column-count columns in order to provide centring while retaining the ability to appear to break out of the grid into the this left / right space normally used for centring.

// $edge-column-count is the number of columns per inline edge that is created to allow 'breakout' into, and to provide centering
// $column-gap can be set in any css length unit
// $max-width: the maximum width for the main area (assumption: this will kick in at the x-wide breakpoint)
@mixin grid-setup-article-type-A($edge-column-count, $column-gap, $max-width) {

  @include _grid-setup-base($column-gap);

  // Fixed to 12 grid columns in the main area, with a variable number of edge columns
  grid-template-columns:
    [full-start] grid-edge-space(large, $column-gap, $edge-column-count)
    [main-start primary-start secondary-start tertiary-start] repeat(12, 1fr) [primary-end secondary-end tertiary-end main-end]
    grid-edge-space(large, $column-gap, $edge-column-count) [full-end];

  @include mq($from: medium) {
    grid-template-columns:
      [full-start] grid-edge-space(large, $column-gap, $edge-column-count)
      [main-start primary-start secondary-start tertiary-start] repeat(12, 1fr) [primary-end secondary-end tertiary-end main-end]
      grid-edge-space(large, $column-gap, $edge-column-count) [full-end];
  }

  @include mq($from: wide) {
    grid-template-columns:
      [full-start] grid-edge-space(large, $column-gap, $edge-column-count)
      [main-start primary-start tertiary-start] repeat(8, 1fr) [primary-end secondary-start] repeat(4, 1fr) [secondary-end tertiary-end main-end]
      grid-edge-space(large, $column-gap, $edge-column-count) [full-end];
  }

  @include mq($from: x-wide) {
    $column-gap-fixed: calc-fixed-col-gap($column-gap, $max-width);
    grid-column-gap: $column-gap-fixed;

    // There are main-columns - 1 gutters to account for within the central $main-column-count number of columns:
    $column-track-fixed: ($max-width - ($column-gap-fixed * (12 - 1))) / 12;
    grid-template-columns:
      [full-start] repeat($edge-column-count, #{1 / $edge-column-count}fr)
      [main-start tertiary-start] repeat(2, $column-track-fixed) [tertiary-end primary-start] repeat(7, $column-track-fixed) [primary-end secondary-start] repeat(3, $column-track-fixed) [secondary-end main-end]
      repeat($edge-column-count, #{1 / $edge-column-count}fr) [full-end];
  }

}

@mixin grid-setup-research-article($edge-column-count, $column-gap, $max-width) {

  display: grid;
  grid-column-gap: $column-gap;
  grid-template-rows: [site-header] auto [main] 1fr;

  // Fixed to 12 grid columns in the main area, with a variable number of edge columns
  grid-template-columns:
    [full-start] grid-edge-space(large, $column-gap, $edge-column-count)
    [main-start primary-start secondary-start tertiary-start] repeat(12, 1fr) [primary-end secondary-end tertiary-end main-end]
    grid-edge-space(large, $column-gap, $edge-column-count) [full-end];

  @include mq($from: medium) {
    grid-template-columns:
      [full-start] grid-edge-space(large, $column-gap, $edge-column-count)
      [main-start primary-start secondary-start tertiary-start] repeat(12, 1fr) [primary-end secondary-end tertiary-end main-end]
      grid-edge-space(large, $column-gap, $edge-column-count) [full-end];
  }

  @include mq($from: wide) {
    grid-template-columns:
      [full-start] grid-edge-space(large, $column-gap, $edge-column-count)
      [main-start primary-start tertiary-start] repeat(8, 1fr) [primary-end secondary-start] repeat(4, 1fr) [secondary-end tertiary-end main-end]
      grid-edge-space(large, $column-gap, $edge-column-count) [full-end];
  }

  @include mq($from: x-wide) {
    $column-gap-fixed: calc-fixed-col-gap($column-gap, $max-width);
    grid-column-gap: $column-gap-fixed;

    // There are main-columns - 1 gutters to account for within the central $main-column-count number of columns:
    $column-track-fixed: ($max-width - ($column-gap-fixed * (12 - 1))) / 12;
    grid-template-columns:
      [full-start] repeat($edge-column-count, #{1 / $edge-column-count}fr)
      [main-start tertiary-start] repeat(2, $column-track-fixed) [tertiary-end primary-start] repeat(7, $column-track-fixed) [primary-end secondary-start] repeat(3, $column-track-fixed) [secondary-end main-end]
      repeat($edge-column-count, #{1 / $edge-column-count}fr) [full-end];
  }

}

@mixin grid-span-full() {
  grid-column: full;
}

@mixin grid-span-main() {
  grid-column: main;
}
