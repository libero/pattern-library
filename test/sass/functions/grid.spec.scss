@import "../test";
@import "../../../source/css/sass/functions/grid";

@include describe("@function calc-fixed-col-gap") {

  @include it("returns the supplied colunm gap when it is a non-percentage value") {

    $lengths: 1px, 2em, 3rem, 4vw, 5vh;

    @each $length in $lengths {
      @include assert-equal(
        calc-fixed-col-gap($length),
        $length
      );
    }

  }

  @include it("returns the correct proportion of the max width when the supplied column gap is a percentage value") {

    @include assert-equal(
      calc-fixed-col-gap(10%, 1000px),
      100px
    );

  }

  @include it("errors if the supplied column gap is a percentage, but no max-width is supplied") {

    @include assert-equal(
      calc-fixed-col-gap(10%),
      "max-width is required when column gap is specified as a percentage"
    );

  }

}

@include describe("@function grid-start") {

  @include it("When supplied just a column count, it creates the correct number of correctly sized columns starting at the 'full-start' column track") {

    @include assert-equal(
      grid-start(4),
      [full-start] repeat(4, 0.25fr)
    );

  }

  @include it("When supplied a column count, edge space and column gap, it creates the correct number of correctly sized columns starting at the 'full-start' column track, accounting for the column gap and the edge space") {

    @include assert-equal(
      grid-start(4, medium, 5px),
      [full-start] repeat(4, calc((7vw - (5px * 4)) / 4))
    );
  }

  @include it("Errors if supplied an edge space but not a column gap") {

    @include assert-equal(
      grid-start(4, medium),
      "Expected both edge space and column gap, but only edge-space supplied"
    );
  }

}

@include describe("@function grid-end") {
  @include it("When supplied just a column count, it creates the correct number of correctly sized columns ending at the 'full-end' column track") {

    @include assert-equal(
      grid-end(4),
      repeat(4, 0.25fr) [full-end]
    );

  }

  @include it("When supplied a column count, edge space and column gap, it creates the correct number of correctly sized columns ending at the 'full-end' column track, accounting for the column gap and the edge space") {

    @include assert-equal(
      grid-end(4, large, 5px),
      repeat(4, calc((14vw - (5px * 4)) / 4)) [full-end]
    );
  }

  @include it("Errors if supplied an edge space but not a column gap") {

    @include assert-equal(
      grid-end(4, medium),
      "Expected both edge space and column gap, but only edge-space supplied"
    );

  }

}

@include describe("@function grid-main-basic") {

  @include it("Builds 12 main columns of equal, flexible size when no fixed track width is supplied") {

    @include assert-equal(
      grid-main-basic(),
      [main-start] repeat(12, 1fr) [main-end]
    );

  }

  @include it("Builds 12 main columns of equal, fixed size when a fixed track width is supplied") {

    @include assert-equal(
      grid-main-basic(65px),
      [main-start] repeat(12, 65px) [main-end]
    );

  }

}
